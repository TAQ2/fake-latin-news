{"version":3,"sources":["theme.js","containers/Header/index.js","components/Toaster.js","components/Loader.js","components/Card.js","containers/Comments/Comment.js","components/Button.js","actions/comments.js","containers/Comments/AddComment.js","containers/Comments/index.js","containers/Posts/Post.js","containers/Posts/index.js","actions/posts.js","actions/userMetrics.js","containers/App/index.js","serviceWorker.js","reducers/comments.js","reducers/posts.js","reducers/userMetrics.js","reducers/index.js","index.js"],"names":["screenBreakpoints","small","tablet","colours","primary","Container","styled","animated","header","_templateObject","connect","state","hasScrolled","userMetrics","scrollY","screenWidth","_ref","animation","useSpring","from","fontSize","background","concat","react_default","a","createElement","style","color","div","Toaster_templateObject","Toaster","children","_useState","useState","_useState2","Object","slicedToArray","isClosed","setIsClosed","transform","opacity","Toaster_Container","position","right","top","cursor","index_esm","onClick","display","alignItems","marginRight","size","L","Loader_templateObject","Loader","_React$useState","React","_React$useState2","showLoader","setShowLoader","useEffect","timeout","setTimeout","clearTimeout","justifyContent","marginTop","Card","Card_templateObject","Comment_templateObject","Name","strong","_templateObject2","Comment","_this$props","this","props","name","body","email","components_Card","Comment_Container","href","Component","Button","Button_templateObject","isDisabled","requestComments","postId","type","receiveComments","items","error","addComment","formData","Input","input","AddComment_templateObject","AddComment","title","isDisplayingForm","handleInputChange","e","_this","setState","defineProperty","currentTarget","value","handleSubmit","dispatch","_this$state","_this2","_this$state2","components_Button","marginBottom","submitIsDisabled","isSmallScreen","flexDirection","onChange","placeholder","marginLeft","width","border","backgroundColor","borderRadius","resize","padding","rows","Comments_templateObject","Comments","comments","fetchingComments","regenerator_default","async","_context","prev","next","t0","awrap","fetch","t1","sent","json","call","t2","slice","stop","retrieveComments","_this$props2","Fragment","Comments_Container","nodes","map","comment","i","Comments_Comment","assign","key","Comments_AddComment","_state$comments","Post","isShowingComments","id","index","fontWeight","containers_Comments","Posts_templateObject","Posts","posts","fetchingPosts","Posts_Container","post","Posts_Post","_state$posts","UPDATE_SCROLL_Y","UPDATE_SCREEN_WIDTH","App","updateScroll","winScrollY","document","scrollTop","documentElement","updateScreen","window","innerWidth","addEventListener","removeEventListener","containers_Header","containers_Posts","target","rel","Boolean","location","hostname","match","arguments","length","undefined","action","objectSpread2","newComment","newComments","toConsumableArray","initialState","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2042bc1.chunk.js","sourcesContent":["export const screenBreakpoints = {\n  small: 576,\n  tablet: 750\n};\n\nexport const colours = {\n  primary: \"#acd0e6\"\n};\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport { screenBreakpoints, colours } from \"../../theme\";\nimport { PropTypes } from \"prop-types\";\n\nconst Container = styled(animated.header)`\n  @media (max-width: ${screenBreakpoints.tablet}px) {\n    justify-content: space-around;\n  }\n\n  font-family: Chomsky;\n  padding: 0 5%;\n  position: sticky;\n  width: 100%;\n  top: 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  line-height: 1.3em;\n`;\n\nfunction Header({ hasScrolled, screenWidth }) {\n  // @Cleanup - find a nicer way of generating the animation config\n  const animation = useSpring({\n    from: {\n      fontSize: screenWidth <= screenBreakpoints.small ? \"2em\" : \"3em\"\n    },\n    fontSize:\n      screenWidth <= screenBreakpoints.small\n        ? \"2em\"\n        : hasScrolled\n        ? \"2.5em\"\n        : \"3em\",\n    background: hasScrolled\n      ? `linear-gradient(white 90%, ${colours.primary} 10%)`\n      : `linear-gradient(${colours.primary} 0%, ${colours.primary} 100%)`\n  });\n\n  return (\n    <Container style={animation}>\n      <span>Fake Latin News</span>\n      {screenWidth > screenBreakpoints.tablet && (\n        <span\n          style={{\n            fontSize: \"0.5em\",\n            color: \"#666\"\n          }}\n        >\n          Lorem ipsum dolor sit amet\n        </span>\n      )}\n    </Container>\n  );\n}\n\nHeader.propTypes = {\n  hasScrolled: PropTypes.bool.isRequired,\n  screenWidth: PropTypes.number.isRequired\n};\n\nexport default connect(state => ({\n  hasScrolled: state.userMetrics.scrollY > 0,\n  screenWidth: state.userMetrics.screenWidth\n}))(Header);\n","import React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { MdClose, MdForum } from \"react-icons/md\";\nimport { colours, screenBreakpoints } from \"../theme\";\n\nconst Container = styled(animated.div)`\n  background-color: ${colours.primary};\n  position: fixed;\n  cursor: default;\n  border-radius: 5px;\n  padding: 15px 25px;\n  border: 2px solid #eee;\n  bottom: 10px;\n  right: 10px;\n  width: 500px;\n\n  @media (max-width: ${screenBreakpoints.tablet}px) {\n    right: 2%;\n    width: 96%;\n    bottom: 4%;\n  }\n`;\n\nexport default function Toaster({ children }) {\n  const [isClosed, setIsClosed] = useState(false);\n\n  const animation = useSpring({\n    transform: \"translateX(0px)\",\n    opacity: isClosed ? 0 : 1,\n    from: { transform: \"translateX(50px)\", opacity: 0 }\n  });\n\n  return (\n    <Container style={animation}>\n      <div\n        style={{\n          position: \"absolute\",\n          right: 5,\n          top: 5,\n          cursor: \"pointer\"\n        }}\n      >\n        <MdClose\n          onClick={() => {\n            setIsClosed(true);\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\"\n        }}\n      >\n        <div style={{ marginRight: 20 }}>\n          <MdForum size={40} color=\"purple\" />\n        </div>\n        <span>{children}</span>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { animated } from \"react-spring\";\n\n// @Cleanup - use react spring rather than css for consistency\nconst L = styled(animated.div)`\n  border: 1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1em solid;\n  animation: spin 1.5s linear infinite;\n  border-radius: 50%;\n  width: 8em;\n  height: 8em;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default () => {\n  const [showLoader, setShowLoader] = React.useState(false);\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true);\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [showLoader]);\n\n  if (!showLoader) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"2em\"\n      }}\n    >\n      <L />\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 5px;\n  margin-top: 20px;\n  padding: 5px 15px;\n`;\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Card from \"../../components/Card\";\nimport { screenBreakpoints } from \"../../theme\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n\n  @media (max-width: ${screenBreakpoints.small}px) {\n    flex-direction: column;\n  }\n`;\n\nconst Name = styled.strong`\n  @media (max-width: ${screenBreakpoints.small}px) {\n    margin-bottom: 10px;\n  }\n`;\n\nclass Comment extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { name, body, email } = this.props;\n\n    return (\n      <Card>\n        <Container>\n          <Name>{name}</Name>\n          <a href={\"mailto:\" + email}>{email}</a>\n        </Container>\n        <div>{body}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Comment;\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Button = styled.div`\n  border-radius: 10px;\n  padding: 5px 10px;\n  font-weight: bold;\n\n  ${props => {\n    if (props.isDisabled) {\n      return `\n        cursor: default;\n        background-color: lightgray;\n        border: 2px solid lightgray;\n      `;\n    } else {\n      return `\n        cursor: pointer;\n        background-color: ${colours.primary};\n        border: 2px solid ${colours.primary};\n      `;\n    }\n  }};\n`;\n\nexport default Button;\n","export const REQUEST_COMMENTS = \"REQUEST_COMMENTS\";\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\n\nexport const requestComments = postId => ({\n  type: REQUEST_COMMENTS,\n  postId\n});\n\nexport const receiveComments = (postId, items, error) => ({\n  type: RECEIVE_COMMENTS,\n  items,\n  postId,\n  error\n});\n\nexport const retrieveComments = postId => async dispatch => {\n  dispatch(requestComments(postId));\n\n  let comments, error;\n  try {\n    comments = await (\n      await fetch(\n        \"https://jsonplaceholder.typicode.com/comments?postId=\" + postId\n      )\n    ).json();\n  } catch (e) {\n    error = true;\n    comments = [];\n  }\n\n  dispatch(receiveComments(postId, comments.slice(0, 5), error));\n};\n\nexport const addComment = (postId, formData) => ({\n  type: ADD_COMMENT,\n  postId,\n  formData\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport Card from \"../../components/Card\";\nimport Button from \"../../components/Button\";\nimport { addComment } from \"../../actions/comments\";\nimport { screenBreakpoints } from \"../../theme\";\n\nconst Input = styled.input`\n  @media (max-width: ${screenBreakpoints.tablet}px) {\n    width: 100%;\n  }\n\n  width: 35%\n  border: none;\n  background-color: #efefef;\n  border-radius: 3px;\n  font-weight: bold;\n  line-height: 2em;\n  padding-left: 5px;\n`;\n\nclass AddComment extends React.Component {\n  static propTypes = {\n    postId: PropTypes.number.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    screenWidth: PropTypes.number.isRequired\n  };\n\n  state = {\n    title: \"\",\n    email: \"\",\n    body: \"\",\n    isDisplayingForm: false\n  };\n\n  handleInputChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = () => {\n    const { dispatch, postId } = this.props;\n    const { title, email, body } = this.state;\n\n    if (title === \"\" || email === \"\" || body === \"\") {\n      return;\n    }\n\n    dispatch(addComment(postId, { name: title, email, body }));\n    this.setState({\n      title: \"\",\n      email: \"\",\n      body: \"\"\n    });\n  };\n\n  render() {\n    const { title, email, body, isDisplayingForm } = this.state;\n    const { screenWidth } = this.props;\n\n    if (!isDisplayingForm) {\n      return (\n        <Card>\n          <div style={{ display: \"flex\" }}>\n            <Button\n              style={{ marginBottom: 10 }}\n              onClick={() => {\n                this.setState({ isDisplayingForm: true });\n              }}\n            >\n              <strong>Add a comment</strong>\n            </Button>\n          </div>\n        </Card>\n      );\n    }\n\n    const submitIsDisabled = title === \"\" || email === \"\" || body === \"\";\n    const isSmallScreen = screenWidth < screenBreakpoints.small;\n\n    return (\n      <Card>\n        <div\n          style={{\n            display: \"flex\",\n            marginBottom: 10,\n            flexDirection: isSmallScreen && \"column\"\n          }}\n        >\n          <Input\n            style={{\n              marginRight: 20,\n              marginBottom: isSmallScreen && 10\n            }}\n            value={title}\n            onChange={this.handleInputChange}\n            name=\"title\"\n            placeholder=\"Title...\"\n          />\n          <Input\n            value={email}\n            onChange={this.handleInputChange}\n            name=\"email\"\n            placeholder=\"Email...\"\n          />\n          {!isSmallScreen && (\n            <Button\n              style={{\n                marginLeft: \"auto\"\n              }}\n              isDisabled={submitIsDisabled}\n              onClick={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          )}\n        </div>\n        <textarea\n          style={{\n            width: \"100%\",\n            border: \"none\",\n            backgroundColor: \"#efefef\",\n            borderRadius: \"5px\",\n            resize: \"none\",\n            padding: \"5px 10px\",\n            marginBottom: 10\n          }}\n          rows={3}\n          name=\"body\"\n          value={body}\n          onChange={this.handleInputChange}\n          placeholder=\"Add a comment...\"\n        />\n        {isSmallScreen && (\n          <div\n            style={{\n              display: \"flex\"\n            }}\n          >\n            <Button isDisabled={submitIsDisabled} onClick={this.handleSubmit}>\n              Submit\n            </Button>\n          </div>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default connect(state => ({\n  screenWidth: state.userMetrics.screenWidth\n}))(AddComment);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Loader from \"../../components/Loader\";\nimport Comment from \"./Comment\";\nimport AddComment from \"./AddComment\";\nimport { retrieveComments } from \"../../actions/comments\";\nimport { screenBreakpoints } from \"../../theme\";\n\nconst Container = styled.div`\n  @media (max-width: ${screenBreakpoints.tablet}px) {\n    width: 100%;\n    margin-left: 0%;\n  }\n\n  margin-left: 5%;\n  width: 90%;\n`;\n\nclass Comments extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    postId: PropTypes.number.isRequired,\n    comments: PropTypes.object,\n    error: PropTypes.bool\n  };\n\n  componentDidMount() {\n    const { dispatch, postId, comments } = this.props;\n    if (comments == null || comments.fetchingComments) {\n      dispatch(retrieveComments(postId));\n    }\n  }\n\n  render() {\n    const { comments, postId, error } = this.props;\n\n    if (error) {\n      return <div>Sorry there was an error! Please try again</div>;\n    }\n\n    if (comments == null || comments.fetchingComments) {\n      return <Loader />;\n    }\n    return (\n      <>\n        <Container>\n          {comments.nodes.map((comment, i) => (\n            <Comment {...comment} key={i} />\n          ))}\n        </Container>\n        <AddComment postId={postId} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const { items, error } = state.comments;\n  return { comments: items[props.postId], error };\n};\n\nexport default connect(mapStateToProps)(Comments);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Comments from \"../Comments\";\nimport Button from \"../../components/Button\";\n\nclass Post extends Component {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired\n  };\n\n  state = {\n    isShowingComments: false\n  };\n\n  render() {\n    const { id, title, body, index } = this.props;\n\n    const { isShowingComments } = this.state;\n\n    return (\n      <div style={{ marginBottom: 20, marginTop: 20 }}>\n        {index !== 0 && <hr />}\n        <div style={{ fontSize: \"1.2em\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"baseline\",\n              justifyContent: \"space-between\"\n            }}\n          >\n            <div\n              style={{\n                marginBottom: 10,\n                fontSize: \"1.2em\",\n                fontWeight: \"bold\"\n              }}\n            >\n              {title}\n            </div>\n          </div>\n          <div>{body}</div>\n        </div>\n        <div style={{ display: \"flex\", marginTop: 20 }}>\n          <Button\n            onClick={() => {\n              this.setState({ isShowingComments: !isShowingComments });\n            }}\n          >\n            {isShowingComments ? \"Comments \\u2193 \" : \"Comments \\u2192\"}\n          </Button>\n        </div>\n        {isShowingComments && <Comments postId={id} />}\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport Loader from \"../../components/Loader\";\nimport Post from \"./Post\";\nimport { screenBreakpoints } from \"../../theme\";\nimport { retrievePosts } from \"../../actions/posts\";\n\nconst Container = styled.div`\n  @media (max-width: ${screenBreakpoints.tablet}px) {\n    width: 98%;\n  }\n\n  width: 80%;\n  margin: 0 auto;\n  max-width: 1050px;\n`;\n\nclass Posts extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n    fetchingPosts: PropTypes.bool.isRequired,\n    error: PropTypes.bool\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(retrievePosts());\n  }\n\n  render() {\n    const { posts, fetchingPosts, error } = this.props;\n\n    if (error) {\n      return <div>Sorry there was an error! Please try again</div>;\n    }\n\n    if (fetchingPosts) {\n      return <Loader />;\n    }\n\n    return (\n      <Container>\n        {posts.map((post, i) => (\n          <Post\n            key={post.id}\n            id={post.id}\n            title={post.title}\n            body={post.body}\n            index={i}\n          />\n        ))}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { fetchingPosts, items, error } = state.posts;\n\n  return {\n    fetchingPosts,\n    posts: items,\n    error\n  };\n};\n\nexport default connect(mapStateToProps)(Posts);\n","export const REQUEST_POSTS = \"REQUEST_POSTS\";\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\n\nexport const requestPosts = () => ({\n  type: REQUEST_POSTS\n});\n\nexport const receivePosts = ({ posts, error }) => ({\n  type: RECEIVE_POSTS,\n  posts,\n  error\n});\n\nexport const retrievePosts = () => async dispatch => {\n  dispatch(requestPosts());\n\n  let posts, error;\n  try {\n    posts = await (\n      await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    ).json();\n  } catch (e) {\n    posts = [];\n    error = true;\n  }\n\n  dispatch(receivePosts({ posts, error }));\n};\n","export const UPDATE_SCROLL_Y = \"UPDATE_SCROLL_Y\";\nexport const UPDATE_SCREEN_WIDTH = \"UPDATE_SCREEN_WIDTH\";\n\nexport function updateScrollY(scrollY) {\n  return {\n    type: UPDATE_SCROLL_Y,\n    scrollY\n  };\n}\n\nexport function updateScreenWidth(screenWidth) {\n  return {\n    type: UPDATE_SCREEN_WIDTH,\n    screenWidth\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"../Header\";\nimport Toaster from \"../../components/Toaster\";\nimport Posts from \"../Posts\";\nimport { updateScrollY, updateScreenWidth } from \"../../actions/userMetrics\";\n\n// @Cleanup - move the user metric listeners to a redux middleware\nclass App extends React.Component {\n  updateScroll = () => {\n    const winScrollY =\n      document.body.scrollTop || document.documentElement.scrollTop;\n\n    this.props.dispatch(updateScrollY(winScrollY));\n  };\n\n  updateScreen = () => {\n    // @Incomplete - we should throttle this update\n    this.props.dispatch(updateScreenWidth(window.innerWidth));\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.updateScroll);\n    window.addEventListener(\"resize\", this.updateScreen);\n    this.updateScroll();\n    this.updateScreen();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.updateScroll);\n    window.removeEventListener(\"resize\", this.updateScreen);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Posts />\n        <Toaster>\n          This app explores react lifecycles, redux, responsive design and more.\n          See more{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.github.com/taq2/forum-app\"\n          >\n            here\n          </a>\n          .\n        </Toaster>\n      </>\n    );\n  }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  REQUEST_COMMENTS,\n  RECEIVE_COMMENTS,\n  ADD_COMMENT\n} from \"../actions/comments\";\n\nconst comments = (\n  state = {\n    items: {},\n    error: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_COMMENTS:\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          [action.postId]: { fetchingComments: true }\n        }\n      };\n    case RECEIVE_COMMENTS:\n      return {\n        ...state,\n        error: action.error,\n        items: {\n          ...state.items,\n          [action.postId]: { nodes: action.items, fetchingComments: false }\n        }\n      };\n    case ADD_COMMENT:\n      const newComment = { ...action.formData, postId: action.postId };\n      const newComments = [...state.items[action.postId].nodes, newComment];\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          [action.postId]: { nodes: newComments, fetchingComments: false }\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default comments;\n","import { REQUEST_POSTS, RECEIVE_POSTS } from \"../actions/posts\";\n\nconst posts = (\n  state = {\n    fetchingPosts: true,\n    items: [],\n    error: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_POSTS:\n      return {\n        ...state,\n        fetchingPosts: true\n      };\n    case RECEIVE_POSTS:\n      return {\n        ...state,\n        fetchingPosts: false,\n        items: action.posts,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import { UPDATE_SCROLL_Y, UPDATE_SCREEN_WIDTH } from \"../actions/userMetrics\";\n\nconst initialState = {\n  scrollY: document.body.scrollTop || document.documentElement.scrollTop,\n  screenWidth: window.innerWidth\n};\n\nfunction userMetrics(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SCROLL_Y:\n      return {\n        ...state,\n        scrollY: action.scrollY\n      };\n    case UPDATE_SCREEN_WIDTH:\n      return {\n        ...state,\n        screenWidth: action.screenWidth\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default userMetrics;\n","import { combineReducers } from \"redux\";\n\nimport comments from \"./comments\";\nimport posts from \"./posts\";\nimport userMetrics from \"./userMetrics\";\n\nexport default combineReducers({\n  posts,\n  comments,\n  userMetrics\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}